{"version":3,"file":"7770.routes.375cc46e755b9c86ee19.js","mappings":"+XAEA,MAIA,GAJiBA,EAAAA,EAAAA,OACf,IAAM,wGCGR,GAJgBA,EAAAA,EAAAA,OACd,IAAM,mECGR,GAJgBA,EAAAA,EAAAA,OACd,IAAM,sG,mGCOR,MAAMC,kBAAqBC,IACzB,MAAMC,GAAQC,EAAAA,EAAAA,MAad,OACEC,EAAAA,EAAAA,IAACC,EAAAA,EAAAA,MAAc,CAACC,MAAM,IAAGC,UACvBC,EAAAA,EAAAA,IAACC,EAAAA,GAAM,CAAAF,SAAA,EACLH,EAAAA,EAAAA,IAACM,EAAAA,GAAK,CAACC,KAAI,GAAAC,OAAKV,EAAMS,KAAI,aAAYJ,UACpCH,EAAAA,EAAAA,IAACS,EAAQ,CAACC,cAAeZ,EAAMa,SAEjCX,EAAAA,EAAAA,IAACM,EAAAA,GAAK,CAACC,KAAI,GAAAC,OAAKV,EAAMS,KAAI,YAAWJ,UACnCH,EAAAA,EAAAA,IAACY,EAAO,CAACF,cAAeZ,EAAMa,SAEhCX,EAAAA,EAAAA,IAACM,EAAAA,GAAK,CAAAH,UACJH,EAAAA,EAAAA,IAACa,EAAO,UAGG,EAGrBjB,kBAAkBkB,YAAc,oBAEhC,yB","sources":["webpack://my-new-custom-application-project/./src/components/channels/index.ts","webpack://my-new-custom-application-project/./src/components/welcome/index.ts","webpack://my-new-custom-application-project/./src/components/reviews/index.ts","webpack://my-new-custom-application-project/./src/routes.tsx"],"sourcesContent":["import { lazy } from 'react';\r\n\r\nconst Channels = lazy(\r\n  () => import('./channels' /* webpackChunkName: \"channels\" */)\r\n);\r\n\r\nexport default Channels;\r\n","import { lazy } from 'react';\r\n\r\nconst Welcome = lazy(\r\n  () => import('./welcome' /* webpackChunkName: \"welcome\" */)\r\n);\r\n\r\nexport default Welcome;\r\n","import { lazy } from 'react';\r\n\r\nconst Reviews = lazy(\r\n  () => import('./reviews' /* webpackChunkName: \"reviews\" */)\r\n);\r\n\r\nexport default Reviews;\r\n","import type { ReactNode } from 'react';\r\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\r\nimport Spacings from '@commercetools-uikit/spacings';\r\nimport Channels from './components/channels';\r\nimport Welcome from './components/welcome';\r\nimport Reviews from './components/reviews';\r\n\r\ntype ApplicationRoutesProps = {\r\n  children?: ReactNode;\r\n};\r\nconst ApplicationRoutes = (_props: ApplicationRoutesProps) => {\r\n  const match = useRouteMatch();\r\n\r\n  /**\r\n   * When using routes, there is a good chance that you might want to\r\n   * restrict the access to a certain route based on the user permissions.\r\n   * You can evaluate user permissions using the `useIsAuthorized` hook.\r\n   * For more information see https://docs.commercetools.com/custom-applications/development/permissions\r\n   *\r\n   * NOTE that by default the Custom Application implicitly checks for a \"View\" permission,\r\n   * otherwise it won't render. Therefore, checking for \"View\" permissions here\r\n   * is redundant and not strictly necessary.\r\n   */\r\n\r\n  return (\r\n    <Spacings.Inset scale=\"l\">\r\n      <Switch>\r\n        <Route path={`${match.path}/channels`}>\r\n          <Channels linkToWelcome={match.url} />\r\n        </Route>\r\n        <Route path={`${match.path}/reviews`}>\r\n          <Reviews linkToWelcome={match.url} />\r\n        </Route>\r\n        <Route>\r\n          <Welcome />\r\n        </Route>\r\n      </Switch>\r\n    </Spacings.Inset>\r\n  );\r\n};\r\nApplicationRoutes.displayName = 'ApplicationRoutes';\r\n\r\nexport default ApplicationRoutes;\r\n"],"names":["lazy","ApplicationRoutes","_props","match","useRouteMatch","_jsx","Spacings","scale","children","_jsxs","Switch","Route","path","concat","Channels","linkToWelcome","url","Reviews","Welcome","displayName"],"sourceRoot":""}