{"version":3,"file":"238.channel-details.1a6afcc30eee15703ebc.js","mappings":"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","sources":["webpack://my-new-custom-application-project/./src/components/channel-details/conversions.ts","webpack://my-new-custom-application-project/./node_modules/@commercetools-uikit/localized-text-field/dist/commercetools-uikit-localized-text-field.esm.js","webpack://my-new-custom-application-project/./src/components/channel-details/constants.ts","webpack://my-new-custom-application-project/./src/components/channel-details/validate.ts","webpack://my-new-custom-application-project/./src/components/channel-details/messages.ts","webpack://my-new-custom-application-project/./src/components/channel-details/channel-details-form.tsx","webpack://my-new-custom-application-project/./src/components/channel-details/channel-details.tsx","webpack://my-new-custom-application-project/./src/components/channel-details/transform-errors.ts","webpack://my-new-custom-application-project/./src/constants.ts"],"sourcesContent":["import LocalizedTextInput from '@commercetools-uikit/localized-text-input';\r\nimport { transformLocalizedFieldToLocalizedString } from '@commercetools-frontend/l10n';\r\nimport type { TFetchChannelDetailsQuery } from '../../types/generated/ctp';\r\nimport type { TFormValues } from '../../types';\r\n\r\nexport const docToFormValues = (\r\n  channel: TFetchChannelDetailsQuery['channel'],\r\n  languages: string[]\r\n): TFormValues => ({\r\n  key: channel?.key ?? '',\r\n  roles: channel?.roles ?? [],\r\n  name: LocalizedTextInput.createLocalizedString(\r\n    languages,\r\n    transformLocalizedFieldToLocalizedString(channel?.nameAllLocales ?? []) ??\r\n      {}\r\n  ),\r\n});\r\n\r\nexport const formValuesToDoc = (formValues: TFormValues) => ({\r\n  name: LocalizedTextInput.omitEmptyTranslations(formValues.name),\r\n  key: formValues.key,\r\n  roles: formValues.roles,\r\n});\r\n","import _defineProperty from '@babel/runtime-corejs3/helpers/esm/defineProperty';\nimport _classCallCheck from '@babel/runtime-corejs3/helpers/esm/classCallCheck';\nimport _createClass from '@babel/runtime-corejs3/helpers/esm/createClass';\nimport _inherits from '@babel/runtime-corejs3/helpers/esm/inherits';\nimport _possibleConstructorReturn from '@babel/runtime-corejs3/helpers/esm/possibleConstructorReturn';\nimport _getPrototypeOf from '@babel/runtime-corejs3/helpers/esm/getPrototypeOf';\nimport _pt from 'prop-types';\nimport _someInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/some';\nimport _Object$values from '@babel/runtime-corejs3/core-js-stable/object/values';\nimport _Reflect$construct from '@babel/runtime-corejs3/core-js-stable/reflect/construct';\nimport _Object$keys from '@babel/runtime-corejs3/core-js-stable/object/keys';\nimport _Object$getOwnPropertySymbols from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols';\nimport _filterInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/filter';\nimport _Object$getOwnPropertyDescriptor from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor';\nimport _forEachInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/for-each';\nimport _Object$getOwnPropertyDescriptors from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors';\nimport _Object$defineProperties from '@babel/runtime-corejs3/core-js-stable/object/define-properties';\nimport _Object$defineProperty from '@babel/runtime-corejs3/core-js-stable/object/define-property';\nimport { isValidElement, Component } from 'react';\nimport { createSequentialId, warning, filterDataAttributes, getFieldId } from '@commercetools-uikit/utils';\nimport Constraints from '@commercetools-uikit/constraints';\nimport Spacings from '@commercetools-uikit/spacings';\nimport FieldLabel from '@commercetools-uikit/field-label';\nimport LocalizedTextInput from '@commercetools-uikit/localized-text-input';\nimport FieldErrors from '@commercetools-uikit/field-errors';\nimport { jsx, jsxs } from '@emotion/react/jsx-runtime';\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); enumerableOnly && (symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var _context2, _context3; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty(_context2 = ownKeys(Object(source), !0)).call(_context2, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)) : _forEachInstanceProperty(_context3 = ownKeys(Object(source))).call(_context3, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nconst sequentialId = createSequentialId('localized-text-field-');\nconst sequentialErrorsId = createSequentialId('localized-text-field-error-')();\nconst hasErrors = errors => {\n  var _context;\n  return errors && _someInstanceProperty(_context = _Object$values(errors)).call(_context, Boolean);\n};\nlet LocalizedTextField = /*#__PURE__*/function (_Component) {\n  _inherits(LocalizedTextField, _Component);\n  var _super = _createSuper(LocalizedTextField);\n  function LocalizedTextField() {\n    var _this;\n    _classCallCheck(this, LocalizedTextField);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call(this, ...args);\n    _this.state = {\n      // We generate an id in case no id is provided by the parent to attach the\n      // label to the input component.\n      id: _this.props.id\n    };\n    return _this;\n  }\n  _createClass(LocalizedTextField, [{\n    key: \"render\",\n    value: function render() {\n      const hasError = this.props.touched && hasErrors(this.props.errors);\n      if (this.props.hintIcon) {\n        process.env.NODE_ENV !== \"production\" ? warning(typeof this.props.hint === 'string' || /*#__PURE__*/isValidElement(this.props.hint), 'LocalizedTextField: `hint` is required to be string or ReactNode if hintIcon is present') : void 0;\n      }\n      if (this.props.hideLanguageExpansionControls) {\n        process.env.NODE_ENV !== \"production\" ? warning(typeof this.props.defaultExpandLanguages !== 'boolean', 'LocalizedTextField: \"defaultExpandLanguages\" does not have any effect when \"hideLanguageExpansionControls\" is set.') : void 0;\n      }\n      return jsx(Constraints.Horizontal, {\n        max: this.props.horizontalConstraint,\n        children: jsxs(Spacings.Stack, {\n          scale: \"xs\",\n          children: [jsx(FieldLabel, {\n            title: this.props.title,\n            hint: this.props.hint,\n            description: this.props.description,\n            onInfoButtonClick: this.props.onInfoButtonClick,\n            hintIcon: this.props.hintIcon,\n            badge: this.props.badge,\n            hasRequiredIndicator: this.props.isRequired,\n            htmlFor: this.state.id\n          }), jsx(LocalizedTextInput, _objectSpread(_objectSpread({\n            autoComplete: this.props.autoComplete,\n            id: this.state.id,\n            name: this.props.name,\n            value: this.props.value,\n            onChange: this.props.onChange,\n            selectedLanguage: this.props.selectedLanguage,\n            onBlur: this.props.onBlur,\n            onFocus: this.props.onFocus,\n            hideLanguageExpansionControls: this.props.hideLanguageExpansionControls,\n            defaultExpandLanguages: this.props.defaultExpandLanguages,\n            isAutofocussed: this.props.isAutofocussed,\n            isDisabled: this.props.isDisabled,\n            isReadOnly: this.props.isReadOnly,\n            errors: this.props.errorsByLanguage,\n            hasError: hasError,\n            placeholder: this.props.placeholder,\n            horizontalConstraint: \"scale\"\n          }, filterDataAttributes(this.props)), {}, {\n            \"aria-invalid\": hasError,\n            \"aria-errormessage\": sequentialErrorsId\n          })), jsx(FieldErrors, {\n            id: sequentialErrorsId,\n            errors: this.props.errors,\n            isVisible: hasError,\n            renderError: this.props.renderError\n          })]\n        })\n      });\n    }\n  }], [{\n    key: \"toFieldErrors\",\n    value:\n    /**\n     * Use this function to convert the Formik `errors` object type to\n     * our custom field errors type.\n     * This is primarly useful when using TypeScript.\n     */\n    function toFieldErrors(errors) {\n      return errors;\n    }\n  }]);\n  return LocalizedTextField;\n}(Component);\nLocalizedTextField.displayName = 'LocalizedTextField';\nLocalizedTextField.defaultProps = {\n  horizontalConstraint: 'scale'\n};\nLocalizedTextField.getDerivedStateFromProps = (props, state) => ({\n  id: getFieldId(props, state, sequentialId)\n});\nLocalizedTextField.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  id: _pt.string,\n  horizontalConstraint: _pt.oneOf([6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 'scale', 'auto']),\n  errors: _pt.objectOf(_pt.bool),\n  renderError: _pt.func,\n  isRequired: _pt.bool,\n  touched: _pt.bool,\n  autoComplete: _pt.string,\n  name: _pt.string,\n  value: _pt.objectOf(_pt.string).isRequired,\n  onChange: _pt.func,\n  selectedLanguage: _pt.string.isRequired,\n  onBlur: _pt.func,\n  onFocus: _pt.func,\n  hideLanguageExpansionControls: _pt.bool,\n  defaultExpandLanguages: _pt.bool,\n  isAutofocussed: _pt.bool,\n  isDisabled: _pt.bool,\n  isReadOnly: _pt.bool,\n  placeholder: _pt.objectOf(_pt.string),\n  errorsByLanguage: _pt.objectOf(_pt.string),\n  title: _pt.node.isRequired,\n  hint: _pt.node,\n  description: _pt.node,\n  onInfoButtonClick: _pt.func,\n  hintIcon: _pt.element\n} : {};\nvar LocalizedTextField$1 = LocalizedTextField;\n\n// NOTE: This string will be replaced on build time with the package version.\nvar version = \"16.5.0\";\n\nexport { LocalizedTextField$1 as default, version };\n","// https://docs.commercetools.com/api/projects/channels#channelroleenum\r\nexport const CHANNEL_ROLES = {\r\n  inventorySupply: 'InventorySupply',\r\n  productDistribution: 'ProductDistribution',\r\n  orderExport: 'OrderExport',\r\n  orderImport: 'OrderImport',\r\n  primary: 'Primary',\r\n};\r\n","import TextInput from '@commercetools-uikit/text-input';\r\nimport omitEmpty from 'omit-empty-es';\r\nimport type { FormikErrors } from 'formik';\r\nimport type { TFormValues } from '../../types';\r\n\r\ntype TErrors = {\r\n  key: { missing?: boolean };\r\n  roles: { missing?: boolean };\r\n};\r\n\r\nconst validate = (formikValues: TFormValues): FormikErrors<TFormValues> => {\r\n  const errors: TErrors = {\r\n    key: {},\r\n    roles: {},\r\n  };\r\n\r\n  if (TextInput.isEmpty(formikValues.key)) {\r\n    errors.key.missing = true;\r\n  }\r\n  if (Array.isArray(formikValues.roles) && formikValues.roles.length === 0) {\r\n    errors.roles.missing = true;\r\n  }\r\n  return omitEmpty(errors);\r\n};\r\n\r\nexport default validate;\r\n","import { defineMessages } from 'react-intl';\r\n\r\nexport default defineMessages({\r\n  backToChannelsList: {\r\n    id: 'ChannelDetails.backToChannelsList',\r\n    defaultMessage: 'Back to channels list',\r\n  },\r\n  duplicateKey: {\r\n    id: 'ChannelDetails.duplicateKey',\r\n    defaultMessage: 'A channel with this key already exists.',\r\n  },\r\n  channelUpdated: {\r\n    id: 'ChannelDetails.channelUpdated',\r\n    defaultMessage: 'Channel {channelName} updated',\r\n  },\r\n  channelKeyLabel: {\r\n    id: 'ChannelDetails.channelKeyLabel',\r\n    defaultMessage: 'Channel key',\r\n  },\r\n  channelNameLabel: {\r\n    id: 'ChannelDetails.channelNameLabel',\r\n    defaultMessage: 'Channel name',\r\n  },\r\n  channelRolesLabel: {\r\n    id: 'ChannelDetails.channelRolesLabel',\r\n    defaultMessage: 'Channel roles',\r\n  },\r\n  hint: {\r\n    id: 'ChannelDetails.hint',\r\n    defaultMessage:\r\n      'This page demonstrates for instance how to use forms, notifications and how to update data using GraphQL, etc.',\r\n  },\r\n  modalTitle: {\r\n    id: 'ChannelDetails.modalTitle',\r\n    defaultMessage: 'Edit channel',\r\n  },\r\n  channelDetailsErrorMessage: {\r\n    id: 'ChannelDetails.errorMessage',\r\n    defaultMessage:\r\n      'We were unable to fetch the channel details. Please check your connection, the provided channel ID and try again.',\r\n  },\r\n});\r\n","import type { ReactElement } from 'react';\r\nimport { useFormik, type FormikHelpers } from 'formik';\r\nimport { useIntl } from 'react-intl';\r\nimport LocalizedTextField from '@commercetools-uikit/localized-text-field';\r\nimport TextField from '@commercetools-uikit/text-field';\r\nimport Spacings from '@commercetools-uikit/spacings';\r\nimport SelectField from '@commercetools-uikit/select-field';\r\nimport type { TFormValues } from '../../types';\r\nimport { CHANNEL_ROLES } from './constants';\r\nimport validate from './validate';\r\nimport messages from './messages';\r\n\r\ntype TChannelRole = keyof typeof CHANNEL_ROLES;\r\ntype Formik = ReturnType<typeof useFormik>;\r\ntype FormProps = {\r\n  formElements: ReactElement;\r\n  values: Formik['values'];\r\n  isDirty: Formik['dirty'];\r\n  isSubmitting: Formik['isSubmitting'];\r\n  submitForm: Formik['handleSubmit'];\r\n  handleReset: Formik['handleReset'];\r\n};\r\ntype TChannelDetailsFormProps = {\r\n  onSubmit: (\r\n    values: TFormValues,\r\n    formikHelpers: FormikHelpers<TFormValues>\r\n  ) => void | Promise<unknown>;\r\n  initialValues: TFormValues;\r\n  isReadOnly: boolean;\r\n  dataLocale: string;\r\n  children: (formProps: FormProps) => JSX.Element;\r\n};\r\n\r\nconst getRoleOptions = Object.keys(CHANNEL_ROLES).map((key) => ({\r\n  label: CHANNEL_ROLES[key as TChannelRole],\r\n  value: CHANNEL_ROLES[key as TChannelRole],\r\n}));\r\n\r\nconst ChannelDetailsForm = (props: TChannelDetailsFormProps) => {\r\n  const intl = useIntl();\r\n  const formik = useFormik<TFormValues>({\r\n    initialValues: props.initialValues,\r\n    onSubmit: props.onSubmit,\r\n    validate,\r\n    enableReinitialize: true,\r\n  });\r\n\r\n  const formElements = (\r\n    <Spacings.Stack scale=\"l\">\r\n      <TextField\r\n        name=\"key\"\r\n        title={intl.formatMessage(messages.channelKeyLabel)}\r\n        value={formik.values.key}\r\n        errors={TextField.toFieldErrors<TFormValues>(formik.errors).key}\r\n        touched={formik.touched.key}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        isReadOnly={props.isReadOnly}\r\n        renderError={(errorKey) => {\r\n          if (errorKey === 'duplicate') {\r\n            return intl.formatMessage(messages.duplicateKey);\r\n          }\r\n          return null;\r\n        }}\r\n        isRequired\r\n        horizontalConstraint={13}\r\n      />\r\n      <LocalizedTextField\r\n        name=\"name\"\r\n        title={intl.formatMessage(messages.channelNameLabel)}\r\n        value={formik.values.name}\r\n        errors={TextField.toFieldErrors<TFormValues>(formik.errors).name}\r\n        touched={Boolean(formik.touched.name)}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        selectedLanguage={props.dataLocale}\r\n        isReadOnly={props.isReadOnly}\r\n        horizontalConstraint={13}\r\n      />\r\n      <SelectField\r\n        name=\"roles\"\r\n        title={intl.formatMessage(messages.channelRolesLabel)}\r\n        value={formik.values.roles}\r\n        errors={SelectField.toFieldErrors<TFormValues>(formik.errors).roles}\r\n        touched={formik.touched.roles}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        isMulti\r\n        options={getRoleOptions}\r\n        isReadOnly={props.isReadOnly}\r\n        isRequired\r\n        horizontalConstraint={13}\r\n      />\r\n    </Spacings.Stack>\r\n  );\r\n\r\n  return props.children({\r\n    formElements,\r\n    values: formik.values,\r\n    isDirty: formik.dirty,\r\n    isSubmitting: formik.isSubmitting,\r\n    submitForm: formik.handleSubmit,\r\n    handleReset: formik.handleReset,\r\n  });\r\n};\r\nChannelDetailsForm.displayName = 'ChannelDetailsForm';\r\n\r\nexport default ChannelDetailsForm;\r\n","import { useIntl } from 'react-intl';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n  PageNotFound,\r\n  FormModalPage,\r\n} from '@commercetools-frontend/application-components';\r\nimport { ContentNotification } from '@commercetools-uikit/notifications';\r\nimport Text from '@commercetools-uikit/text';\r\nimport Spacings from '@commercetools-uikit/spacings';\r\nimport LoadingSpinner from '@commercetools-uikit/loading-spinner';\r\nimport { useCallback } from 'react';\r\nimport { useApplicationContext } from '@commercetools-frontend/application-shell-connectors';\r\nimport { formatLocalizedString } from '@commercetools-frontend/l10n';\r\nimport { DOMAINS, NO_VALUE_FALLBACK } from '@commercetools-frontend/constants';\r\nimport { useIsAuthorized } from '@commercetools-frontend/permissions';\r\nimport {\r\n  useShowNotification,\r\n  useShowApiErrorNotification,\r\n  type TApiErrorNotificationOptions,\r\n} from '@commercetools-frontend/actions-global';\r\nimport { PERMISSIONS } from '../../constants';\r\nimport {\r\n  useChannelDetailsUpdater,\r\n  useChannelDetailsFetcher,\r\n} from '../../hooks/use-channels-connector';\r\nimport { docToFormValues, formValuesToDoc } from './conversions';\r\nimport ChannelsDetailsForm from './channel-details-form';\r\nimport { transformErrors } from './transform-errors';\r\nimport messages from './messages';\r\nimport { ApplicationPageTitle } from '@commercetools-frontend/application-shell';\r\n\r\ntype TChannelDetailsProps = {\r\n  onClose: () => void;\r\n};\r\n\r\nconst ChannelDetails = (props: TChannelDetailsProps) => {\r\n  const intl = useIntl();\r\n  const params = useParams<{ id: string }>();\r\n  const { loading, error, channel } = useChannelDetailsFetcher(params.id);\r\n  const { dataLocale, projectLanguages } = useApplicationContext((context) => ({\r\n    dataLocale: context.dataLocale ?? '',\r\n    projectLanguages: context.project?.languages ?? [],\r\n  }));\r\n  const canManage = useIsAuthorized({\r\n    demandedPermissions: [PERMISSIONS.Manage],\r\n  });\r\n  const showNotification = useShowNotification();\r\n  const showApiErrorNotification = useShowApiErrorNotification();\r\n  const channelDetailsUpdater = useChannelDetailsUpdater();\r\n  const handleSubmit = useCallback(\r\n    async (formikValues, formikHelpers) => {\r\n      const data = formValuesToDoc(formikValues);\r\n      try {\r\n        await channelDetailsUpdater.execute({\r\n          originalDraft: channel!,\r\n          nextDraft: data,\r\n        });\r\n        showNotification({\r\n          kind: 'success',\r\n          domain: DOMAINS.SIDE,\r\n          text: intl.formatMessage(messages.channelUpdated, {\r\n            channelName: formatLocalizedString(formikValues, {\r\n              key: 'name',\r\n              locale: dataLocale,\r\n              fallbackOrder: projectLanguages,\r\n            }),\r\n          }),\r\n        });\r\n      } catch (graphQLErrors) {\r\n        const transformedErrors = transformErrors(graphQLErrors);\r\n        if (transformedErrors.unmappedErrors.length > 0) {\r\n          showApiErrorNotification({\r\n            errors:\r\n              transformedErrors.unmappedErrors as TApiErrorNotificationOptions['errors'],\r\n          });\r\n        }\r\n\r\n        formikHelpers.setErrors(transformedErrors.formErrors);\r\n      }\r\n    },\r\n    [\r\n      channel,\r\n      channelDetailsUpdater,\r\n      dataLocale,\r\n      intl,\r\n      projectLanguages,\r\n      showApiErrorNotification,\r\n      showNotification,\r\n    ]\r\n  );\r\n  return (\r\n    <ChannelsDetailsForm\r\n      initialValues={docToFormValues(channel, projectLanguages)}\r\n      onSubmit={handleSubmit}\r\n      isReadOnly={!canManage}\r\n      dataLocale={dataLocale}\r\n    >\r\n      {(formProps) => {\r\n        const channelName = formatLocalizedString(\r\n          {\r\n            name: formProps.values?.name,\r\n          },\r\n          {\r\n            key: 'name',\r\n            locale: dataLocale,\r\n            fallbackOrder: projectLanguages,\r\n            fallback: NO_VALUE_FALLBACK,\r\n          }\r\n        );\r\n        return (\r\n          <FormModalPage\r\n            title={channelName}\r\n            isOpen\r\n            onClose={props.onClose}\r\n            isPrimaryButtonDisabled={\r\n              formProps.isSubmitting || !formProps.isDirty || !canManage\r\n            }\r\n            isSecondaryButtonDisabled={!formProps.isDirty}\r\n            onSecondaryButtonClick={formProps.handleReset}\r\n            onPrimaryButtonClick={() => formProps.submitForm()}\r\n            labelPrimaryButton={FormModalPage.Intl.save}\r\n            labelSecondaryButton={FormModalPage.Intl.revert}\r\n          >\r\n            {loading && (\r\n              <Spacings.Stack alignItems=\"center\">\r\n                <LoadingSpinner />\r\n              </Spacings.Stack>\r\n            )}\r\n            {error && (\r\n              <ContentNotification type=\"error\">\r\n                <Text.Body>\r\n                  {intl.formatMessage(messages.channelDetailsErrorMessage)}\r\n                </Text.Body>\r\n              </ContentNotification>\r\n            )}\r\n            {channel && formProps.formElements}\r\n            {channel && (\r\n              <ApplicationPageTitle additionalParts={[channelName]} />\r\n            )}\r\n            {channel === null && <PageNotFound />}\r\n          </FormModalPage>\r\n        );\r\n      }}\r\n    </ChannelsDetailsForm>\r\n  );\r\n};\r\nChannelDetails.displayName = 'ChannelDetails';\r\n\r\nexport default ChannelDetails;\r\n","import omitEmpty from 'omit-empty-es';\r\n\r\nconst DUPLICATE_FIELD_ERROR_CODE = 'DuplicateField';\r\n\r\ntype TransformedErrors = {\r\n  unmappedErrors: unknown[];\r\n  formErrors: Record<string, { duplicate: boolean }>;\r\n};\r\n\r\nexport const transformErrors = (graphQlErrors: unknown): TransformedErrors => {\r\n  const errorsToMap = Array.isArray(graphQlErrors)\r\n    ? graphQlErrors\r\n    : [graphQlErrors];\r\n\r\n  const { formErrors, unmappedErrors } = errorsToMap.reduce<TransformedErrors>(\r\n    (transformedErrors, graphQlError) => {\r\n      const errorCode = graphQlError?.extensions?.code ?? graphQlError.code;\r\n      const fieldName = graphQlError?.extensions?.field ?? graphQlError.field;\r\n\r\n      if (errorCode === DUPLICATE_FIELD_ERROR_CODE) {\r\n        transformedErrors.formErrors[fieldName] = { duplicate: true };\r\n      } else {\r\n        transformedErrors.unmappedErrors.push(graphQlError);\r\n      }\r\n      return transformedErrors;\r\n    },\r\n    {\r\n      formErrors: {}, // will be mappped to form field error messages\r\n      unmappedErrors: [], // will result in dispatching `showApiErrorNotification`\r\n    }\r\n  );\r\n\r\n  return {\r\n    formErrors: omitEmpty(formErrors),\r\n    unmappedErrors,\r\n  };\r\n};\r\n","// Make sure to import the helper functions from the `ssr` entry point.\nimport { entryPointUriPathToPermissionKeys } from '@commercetools-frontend/application-shell/ssr';\n\nexport const entryPointUriPath = 'product-review';\n\nexport const PERMISSIONS = entryPointUriPathToPermissionKeys(entryPointUriPath);\n"],"names":["docToFormValues","channel","languages","_channel$key","_channel$roles","_transformLocalizedFi","_channel$nameAllLocal","key","roles","name","LocalizedTextInput","transformLocalizedFieldToLocalizedString","nameAllLocales","ownKeys","object","enumerableOnly","keys","symbols","call","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","_context2","_context3","source","Object","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","Reflect","Proxy","Boolean","prototype","valueOf","e","_createSuperInternal","result","Super","NewTarget","this","constructor","sequentialId","sequentialErrorsId","LocalizedTextField","_Component","_super","_this","_len","args","Array","_key","state","id","props","value","render","hasError","touched","errors","_context","hasErrors","hintIcon","hideLanguageExpansionControls","max","horizontalConstraint","children","scale","title","hint","description","onInfoButtonClick","badge","hasRequiredIndicator","isRequired","htmlFor","autoComplete","onChange","selectedLanguage","onBlur","onFocus","defaultExpandLanguages","isAutofocussed","isDisabled","isReadOnly","errorsByLanguage","placeholder","isVisible","renderError","toFieldErrors","Component","displayName","defaultProps","getDerivedStateFromProps","propTypes","LocalizedTextField$1","CHANNEL_ROLES","inventorySupply","productDistribution","orderExport","orderImport","primary","formikValues","TextInput","missing","_Array$isArray","omitEmpty","defineMessages","backToChannelsList","defaultMessage","duplicateKey","channelUpdated","channelKeyLabel","channelNameLabel","channelRolesLabel","modalTitle","channelDetailsErrorMessage","getRoleOptions","_mapInstanceProperty","_Object$keys","label","ChannelDetailsForm","intl","useIntl","formik","useFormik","initialValues","onSubmit","validate","enableReinitialize","formElements","_jsxs","Spacings","_jsx","TextField","formatMessage","messages","_valuesInstanceProperty","handleChange","handleBlur","errorKey","dataLocale","SelectField","isMulti","options","values","isDirty","dirty","isSubmitting","submitForm","handleSubmit","handleReset","ChannelDetails","params","useParams","_useChannelDetailsFet","useChannelDetailsFetcher","loading","error","_useApplicationContex","useApplicationContext","context","_context$dataLocale","_context$project$lang","_context$project","projectLanguages","project","canManage","useIsAuthorized","demandedPermissions","PERMISSIONS","showNotification","useShowNotification","showApiErrorNotification","useShowApiErrorNotification","channelDetailsUpdater","useChannelDetailsUpdater","useCallback","async","formikHelpers","data","formValues","execute","originalDraft","nextDraft","kind","domain","DOMAINS","text","channelName","formatLocalizedString","locale","fallbackOrder","graphQLErrors","transformedErrors","graphQlErrors","errorsToMap","_errorsToMap$reduce","_reduceInstanceProperty","graphQlError","_graphQlError$extensi","_graphQlError$extensi2","_graphQlError$extensi3","_graphQlError$extensi4","errorCode","extensions","code","fieldName","field","formErrors","duplicate","unmappedErrors","transformErrors","setErrors","ChannelsDetailsForm","formProps","_formProps$values","fallback","NO_VALUE_FALLBACK","FormModalPage","isOpen","onClose","isPrimaryButtonDisabled","isSecondaryButtonDisabled","onSecondaryButtonClick","onPrimaryButtonClick","labelPrimaryButton","labelSecondaryButton","alignItems","LoadingSpinner","ContentNotification","type","Text","ApplicationPageTitle","additionalParts","PageNotFound","entryPointUriPathToPermissionKeys"],"sourceRoot":""}