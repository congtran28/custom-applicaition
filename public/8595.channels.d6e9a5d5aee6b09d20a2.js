(self.webpackChunkmy_new_custom_application_project=self.webpackChunkmy_new_custom_application_project||[]).push([[8595],{"./src/hooks/use-channels-connector/fetch-channel-details.ctp.graphql":e=>{var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"FetchChannelDetails"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"channelId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"channel"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"channelId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"version"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"key"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"roles"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"nameAllLocales"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"locale"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"value"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:184}};n.loc.source={body:"query FetchChannelDetails($channelId: String!) {\r\n  channel(id: $channelId) {\r\n    id\r\n    version\r\n    key\r\n    roles\r\n    nameAllLocales {\r\n      locale\r\n      value\r\n    }\r\n  }\r\n}\r\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function collectFragmentReferences(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){collectFragmentReferences(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){collectFragmentReferences(e,n)})),e.definitions&&e.definitions.forEach((function(e){collectFragmentReferences(e,n)}))}var i={};function findOperation(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}!function extractReferences(){n.definitions.forEach((function(e){if(e.name){var n=new Set;collectFragmentReferences(e,n),i[e.name.value]=n}}))}(),e.exports=n,e.exports.FetchChannelDetails=function oneQuery(e,n){var a={kind:e.kind,definitions:[findOperation(e,n)]};e.hasOwnProperty("loc")&&(a.loc=e.loc);var t=i[n]||new Set,o=new Set,l=new Set;for(t.forEach((function(e){l.add(e)}));l.size>0;){var r=l;l=new Set,r.forEach((function(e){o.has(e)||(o.add(e),(i[e]||new Set).forEach((function(e){l.add(e)})))}))}return o.forEach((function(n){var i=findOperation(e,n);i&&a.definitions.push(i)})),a}(n,"FetchChannelDetails")},"./src/hooks/use-channels-connector/fetch-channels.ctp.graphql":e=>{var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"FetchChannels"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"limit"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"offset"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"sort"}},type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"channels"},arguments:[{kind:"Argument",name:{kind:"Name",value:"limit"},value:{kind:"Variable",name:{kind:"Name",value:"limit"}}},{kind:"Argument",name:{kind:"Name",value:"offset"},value:{kind:"Variable",name:{kind:"Name",value:"offset"}}},{kind:"Argument",name:{kind:"Name",value:"sort"},value:{kind:"Variable",name:{kind:"Name",value:"sort"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"total"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"offset"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"results"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"key"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"roles"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"nameAllLocales"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"locale"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"value"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:291}};n.loc.source={body:"query FetchChannels($limit: Int!, $offset: Int!, $sort: [String!]) {\r\n  channels(limit: $limit, offset: $offset, sort: $sort) {\r\n    total\r\n    count\r\n    offset\r\n    results {\r\n      id\r\n      key\r\n      roles\r\n      nameAllLocales {\r\n        locale\r\n        value\r\n      }\r\n    }\r\n  }\r\n}\r\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function collectFragmentReferences(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){collectFragmentReferences(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){collectFragmentReferences(e,n)})),e.definitions&&e.definitions.forEach((function(e){collectFragmentReferences(e,n)}))}var i={};function findOperation(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}!function extractReferences(){n.definitions.forEach((function(e){if(e.name){var n=new Set;collectFragmentReferences(e,n),i[e.name.value]=n}}))}(),e.exports=n,e.exports.FetchChannels=function oneQuery(e,n){var a={kind:e.kind,definitions:[findOperation(e,n)]};e.hasOwnProperty("loc")&&(a.loc=e.loc);var t=i[n]||new Set,o=new Set,l=new Set;for(t.forEach((function(e){l.add(e)}));l.size>0;){var r=l;l=new Set,r.forEach((function(e){o.has(e)||(o.add(e),(i[e]||new Set).forEach((function(e){l.add(e)})))}))}return o.forEach((function(n){var i=findOperation(e,n);i&&a.definitions.push(i)})),a}(n,"FetchChannels")},"./src/hooks/use-channels-connector/update-channel-details.ctp.graphql":e=>{var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"UpdateChannelDetails"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"channelId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"version"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Long"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"actions"}},type:{kind:"NonNullType",type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ChannelUpdateAction"}}}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"updateChannel"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"channelId"}}},{kind:"Argument",name:{kind:"Name",value:"version"},value:{kind:"Variable",name:{kind:"Name",value:"version"}}},{kind:"Argument",name:{kind:"Name",value:"actions"},value:{kind:"Variable",name:{kind:"Name",value:"actions"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"version"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"key"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"roles"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"nameAllLocales"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"locale"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"value"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:294}};n.loc.source={body:"mutation UpdateChannelDetails(\r\n  $channelId: String!\r\n  $version: Long!\r\n  $actions: [ChannelUpdateAction!]!\r\n) {\r\n  updateChannel(id: $channelId, version: $version, actions: $actions) {\r\n    id\r\n    version\r\n    key\r\n    roles\r\n    nameAllLocales {\r\n      locale\r\n      value\r\n    }\r\n  }\r\n}\r\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function collectFragmentReferences(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){collectFragmentReferences(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){collectFragmentReferences(e,n)})),e.definitions&&e.definitions.forEach((function(e){collectFragmentReferences(e,n)}))}var i={};function findOperation(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}!function extractReferences(){n.definitions.forEach((function(e){if(e.name){var n=new Set;collectFragmentReferences(e,n),i[e.name.value]=n}}))}(),e.exports=n,e.exports.UpdateChannelDetails=function oneQuery(e,n){var a={kind:e.kind,definitions:[findOperation(e,n)]};e.hasOwnProperty("loc")&&(a.loc=e.loc);var t=i[n]||new Set,o=new Set,l=new Set;for(t.forEach((function(e){l.add(e)}));l.size>0;){var r=l;l=new Set,r.forEach((function(e){o.has(e)||(o.add(e),(i[e]||new Set).forEach((function(e){l.add(e)})))}))}return o.forEach((function(n){var i=findOperation(e,n);i&&a.definitions.push(i)})),a}(n,"UpdateChannelDetails")},"./src/components/channels/channels.tsx":(e,n,i)=>{"use strict";i.r(n),i.d(n,{default:()=>E});var a=i("./node_modules/@babel/runtime-corejs3/core-js-stable/instance/concat.js"),t=i.n(a),o=i("./node_modules/react-intl/lib/src/components/useIntl.js"),l=i("./node_modules/react-router/esm/react-router.js"),r=i("./node_modules/react-router-dom/esm/react-router-dom.js"),s=i("./node_modules/@commercetools-frontend/application-shell-connectors/dist/commercetools-frontend-application-shell-connectors.esm.js"),c=i("./node_modules/@commercetools-frontend/constants/dist/commercetools-frontend-constants.esm.js"),d=i("./node_modules/@commercetools-uikit/hooks/dist/commercetools-uikit-hooks.esm.js"),m=i("./node_modules/@commercetools-uikit/icons/dist/commercetools-uikit-icons.esm.js"),u=i("./node_modules/@commercetools-uikit/constraints/dist/commercetools-uikit-constraints.esm.js"),v=i("./node_modules/@commercetools-uikit/flat-button/dist/commercetools-uikit-flat-button.esm.js"),f=i("./node_modules/@commercetools-uikit/loading-spinner/dist/commercetools-uikit-loading-spinner.esm.js"),k=i("./node_modules/@commercetools-uikit/data-table/dist/commercetools-uikit-data-table.esm.js"),h=i("./node_modules/@commercetools-uikit/notifications/dist/commercetools-uikit-notifications.esm.js"),p=i("./node_modules/@commercetools-uikit/pagination/dist/commercetools-uikit-pagination.esm.js"),g=i("./node_modules/@commercetools-uikit/spacings/dist/commercetools-uikit-spacings.esm.js"),b=i("./node_modules/@commercetools-uikit/text/dist/commercetools-uikit-text.esm.js"),y=i("./node_modules/@commercetools-frontend/application-shell/dist/commercetools-frontend-application-shell.esm.js"),j=i("./node_modules/@commercetools-frontend/l10n/dist/commercetools-frontend-l10n.esm.js"),N=i("./src/hooks/use-channels-connector/index.ts"),S=i("./src/helpers.ts");const F=(0,i("./node_modules/react-intl/lib/index.js").vU)({backToWelcome:{id:"Channels.backToWelcome",defaultMessage:"Back to Welcome page"},title:{id:"Channels.title",defaultMessage:"Channels list"},demoHint:{id:"Channels.demoHint",defaultMessage:"This page demonstrates how you can develop a component following some of the Merchant Center UX Guidelines and development best practices. For instance, fetching data using GraphQL, displaying data in a paginated table, writing functional tests, etc."},noResults:{id:"Channels.noResults",defaultMessage:"There are no channels available in this project."}});const _=(0,i("./node_modules/react/index.js").lazy)((()=>Promise.all([i.e(9375),i.e(238)]).then(i.bind(i,"./src/components/channel-details/channel-details.tsx"))));var C=i("./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js");const w=[{key:"name",label:"Channel name"},{key:"key",label:"Channel key",isSortable:!0},{key:"roles",label:"Roles"}],Channels=e=>{const n=(0,o.Z)(),i=(0,l.$B)(),a=(0,l.k6)().push,E=(0,d.nU)(),D=E.page,O=E.perPage,T=(0,d.Bx)({key:"key",order:"asc"}),x=(0,s.UV)((e=>{var n;return{dataLocale:e.dataLocale,projectLanguages:null===(n=e.project)||void 0===n?void 0:n.languages}})),L=x.dataLocale,R=x.projectLanguages,Z=(0,N.t8)({page:D,perPage:O,tableSorting:T}),V=Z.channelsPaginatedResult,A=Z.error,P=Z.loading;return A?(0,C.tZ)(h.I,{type:"error",children:(0,C.tZ)(b.Z.Body,{children:(0,S.e$)(A)})}):(0,C.BX)(g.Z.Stack,{scale:"xl",children:[(0,C.BX)(g.Z.Stack,{scale:"xs",children:[(0,C.tZ)(v.Z,{as:r.rU,to:e.linkToWelcome,label:n.formatMessage(F.backToWelcome),icon:(0,C.tZ)(m.xC,{})}),(0,C.tZ)(b.Z.Headline,{as:"h2",intlMessage:F.title})]}),(0,C.tZ)(u.Z.Horizontal,{max:13,children:(0,C.tZ)(h.I,{type:"info",children:(0,C.tZ)(b.Z.Body,{intlMessage:F.demoHint})})}),P&&(0,C.tZ)(f.Z,{}),V?(0,C.BX)(g.Z.Stack,{scale:"l",children:[(0,C.tZ)(k.ZP,{isCondensed:!0,columns:w,rows:V.results,itemRenderer:(e,n)=>{var i;switch(n.key){case"key":return e.key;case"roles":return e.roles.join(", ");case"name":return(0,j.Wb)({name:(0,j.sM)(null!==(i=e.nameAllLocales)&&void 0!==i?i:[])},{key:"name",locale:L,fallbackOrder:R,fallback:c.xL});default:return null}},sortedBy:T.value.key,sortDirection:T.value.order,onSortChange:T.onChange,onRowClick:e=>{var n;return a(t()(n="".concat(i.url,"/")).call(n,e.id))}}),(0,C.tZ)(p.tl,{page:D.value,onPageChange:D.onChange,perPage:O.value,onPerPageChange:O.onChange,totalItems:V.total}),(0,C.tZ)(l.rs,{children:(0,C.tZ)(y.Kv,{path:"".concat(i.url,"/:id"),children:(0,C.tZ)(_,{onClose:()=>a("".concat(i.url))})})})]}):null]})};Channels.displayName="Channels";const E=Channels},"./src/helpers.ts":(e,n,i)=>{"use strict";i.d(n,{B2:()=>convertToActionData,CF:()=>createGraphQlUpdateActions,dF:()=>extractErrorFromGraphQlResponse,e$:()=>getErrorMessage});var a=i("./node_modules/@babel/runtime-corejs3/helpers/esm/defineProperty.js"),t=i("./node_modules/@babel/runtime-corejs3/helpers/esm/objectWithoutProperties.js"),o=i("./node_modules/@babel/runtime-corejs3/core-js-stable/instance/map.js"),l=i.n(o),r=i("./node_modules/@babel/runtime-corejs3/core-js-stable/instance/reduce.js"),s=i.n(r),c=i("./node_modules/@babel/runtime-corejs3/core-js-stable/object/keys.js"),d=i.n(c),m=i("./node_modules/@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols.js"),u=i.n(m),v=i("./node_modules/@babel/runtime-corejs3/core-js-stable/instance/filter.js"),f=i.n(v),k=i("./node_modules/@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor.js"),h=i.n(k),p=i("./node_modules/@babel/runtime-corejs3/core-js-stable/instance/for-each.js"),g=i.n(p),b=i("./node_modules/@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors.js"),y=i.n(b),j=i("./node_modules/@babel/runtime-corejs3/core-js-stable/object/define-properties.js"),N=i.n(j),S=i("./node_modules/@babel/runtime-corejs3/core-js-stable/object/define-property.js"),F=i.n(S),_=i("./node_modules/@commercetools-frontend/l10n/dist/commercetools-frontend-l10n.esm.js"),C=i("./node_modules/@apollo/client/errors/index.js");const w=["action"];function ownKeys(e,n){var i=d()(e);if(u()){var a=u()(e);n&&(a=f()(a).call(a,(function(n){return h()(e,n).enumerable}))),i.push.apply(i,a)}return i}function _objectSpread(e){for(var n=1;n<arguments.length;n++){var i,t,o=null!=arguments[n]?arguments[n]:{};n%2?g()(i=ownKeys(Object(o),!0)).call(i,(function(n){(0,a.Z)(e,n,o[n])})):y()?N()(e,y()(o)):g()(t=ownKeys(Object(o))).call(t,(function(n){F()(e,n,h()(o,n))}))}return e}const getErrorMessage=e=>{var n;return(null===(n=e.graphQLErrors)||void 0===n?void 0:l()(n).call(n,(e=>e.message)).join("\n"))||e.message},extractErrorFromGraphQlResponse=e=>{if(e instanceof C.cA){var n,i,a,t;if(o=e.networkError,Boolean(null===o||void 0===o?void 0:o.result)&&"string"!==typeof(null===(n=e.networkError)||void 0===n?void 0:n.result)&&(null===(i=e.networkError)||void 0===i||null===(i=i.result)||void 0===i?void 0:i.errors.length)>0)return null===e||void 0===e||null===(t=e.networkError)||void 0===t?void 0:t.result.errors;if((null===(a=e.graphQLErrors)||void 0===a?void 0:a.length)>0)return e.graphQLErrors}var o;return e},isChangeNameActionPayload=e=>void 0!==(null===e||void 0===e?void 0:e.name),convertAction=e=>{const n=e.action,i=(0,t.Z)(e,w);return{[n]:"changeName"===n&&isChangeNameActionPayload(i)?(a=i,{name:(0,_.UK)(a.name)}):i};var a},createGraphQlUpdateActions=e=>s()(e).call(e,((e,n)=>[...e,convertAction(n)]),[]),convertToActionData=e=>_objectSpread(_objectSpread({},e),{},{name:(0,_.sM)(e.nameAllLocales||[])})},"./src/hooks/use-channels-connector/index.ts":(e,n,i)=>{"use strict";i.d(n,{wP:()=>useChannelDetailsFetcher,EE:()=>useChannelDetailsUpdater,t8:()=>useChannelsFetcher});var a=i("./node_modules/@babel/runtime-corejs3/helpers/esm/slicedToArray.js"),t=i("./node_modules/@babel/runtime-corejs3/core-js-stable/instance/concat.js"),o=i.n(t),l=i("./node_modules/@commercetools-frontend/application-shell/dist/commercetools-frontend-application-shell.esm.js"),r=i("./node_modules/@commercetools-frontend/constants/dist/commercetools-frontend-constants.esm.js"),s=i("./node_modules/@commercetools/sync-actions/dist/sync-actions.umd.js"),c=i("./src/helpers.ts"),d=i("./src/hooks/use-channels-connector/fetch-channels.ctp.graphql"),m=i.n(d),u=i("./src/hooks/use-channels-connector/fetch-channel-details.ctp.graphql"),v=i.n(u),f=i("./src/hooks/use-channels-connector/update-channel-details.ctp.graphql"),k=i.n(f);const h=(0,s.createSyncChannels)(),useChannelsFetcher=e=>{var n;let i=e.page,a=e.perPage,t=e.tableSorting;const s=(0,l.VK)(m(),{variables:{limit:a.value,offset:(i.value-1)*a.value,sort:[o()(n="".concat(t.value.key," ")).call(n,t.value.order)]},context:{target:r.C5.COMMERCETOOLS_PLATFORM}}),c=s.data,d=s.error,u=s.loading;return{channelsPaginatedResult:null===c||void 0===c?void 0:c.channels,error:d,loading:u}},useChannelDetailsFetcher=e=>{const n=(0,l.VK)(v(),{variables:{channelId:e},context:{target:r.C5.COMMERCETOOLS_PLATFORM}}),i=n.data,a=n.error,t=n.loading;return{channel:null===i||void 0===i?void 0:i.channel,error:a,loading:t}},useChannelDetailsUpdater=()=>{const e=(0,l.qK)(k()),n=(0,a.Z)(e,2),i=n[0];return{loading:n[1].loading,execute:async e=>{let n=e.originalDraft,a=e.nextDraft;const t=h.buildActions(a,(0,c.B2)(n));try{return await i({context:{target:r.C5.COMMERCETOOLS_PLATFORM},variables:{channelId:n.id,version:n.version,actions:(0,c.CF)(t)}})}catch(o){throw(0,c.dF)(o)}}}}}}]);
//# sourceMappingURL=8595.channels.d6e9a5d5aee6b09d20a2.js.map